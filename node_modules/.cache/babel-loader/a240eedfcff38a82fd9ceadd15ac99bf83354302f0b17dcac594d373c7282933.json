{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0433\\u0430\\\\react\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Header from \"./components/header\";\nimport Users from \"./components/users\";\nimport AddUser from \"./components/addUser\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"https://reqres.in/api/users?page=1\";\nclass App extends React.Component {\n  constructor(props) {\n    //конструктор и обьявление состояний\n    super(props);\n    axios.get(baseUrl).then(res => {\n      //получение информации по url адресу, а затем выполнение кода указанного в then\n      this.setState({\n        users: res.data.data\n      }); // если перейти по ссылке,то можно увидеть что все нужные данные записаны в data\n    });\n    this.state = {\n      users: []\n    };\n    this.addUser = this.addUser.bind(this); // даем разрешение функции работать с состояниями\n    this.deleteUser = this.deleteUser.bind(this);\n    this.editUser = this.editUser.bind(this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Users, {\n          users: this.state.users,\n          onEdit: this.editUser,\n          onDelete: this.deleteUser /*передача методов в компонентах (это нужно проделать во всех вложенных компонентах(в файле Users а затем User) )*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(AddUser, {\n          onAdd: this.addUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  deleteUser(id) {\n    // перебирается весь массив и записываются все элементы кроме того, что указан в условии\n    this.setState({\n      users: this.state.users.filter(el => el.id != id)\n    });\n  }\n  editUser(user) {\n    // функция редактирования формы\n    let allUsers = this.state.users; // получили ввсех пользователей\n    allUsers[user.id] = user; // нашли нужного и заменили на того, что аолуаем в качестве параметра\n\n    this.setState({\n      users: []\n    }, () => {\n      // очищаем массив и сразу заполняем его новыми элементами\n      this.setState({\n        users: [...allUsers]\n      });\n    });\n  }\n  addUser(user) {\n    // к текущему списку добавляется обьект, который состоит из id + параметры, которые передаются в функцию(даные от пользователя)\n    const id = this.state.users.length + 1;\n    this.setState({\n      users: [...this.state.users, {\n        id,\n        ...user\n      }]\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Header","Users","AddUser","axios","jsxDEV","_jsxDEV","baseUrl","App","Component","constructor","props","get","then","res","setState","users","data","state","addUser","bind","deleteUser","editUser","render","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","onAdd","id","filter","el","user","allUsers","length"],"sources":["D:/Прога/react/my-app/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport Header from \"./components/header\"\r\nimport Users from \"./components/users\"\r\nimport AddUser from \"./components/addUser\"\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = \"https://reqres.in/api/users?page=1\"\r\n\r\nclass App extends React.Component {\r\n  constructor (props){ //конструктор и обьявление состояний\r\n    super(props)\r\n\r\n    axios.get(baseUrl).then((res) =>{ //получение информации по url адресу, а затем выполнение кода указанного в then\r\n      this.setState({users: res.data.data}) // если перейти по ссылке,то можно увидеть что все нужные данные записаны в data\r\n    }) \r\n\r\n\r\n    this.state = {\r\n      users: []\r\n    }\r\n    this.addUser = this.addUser.bind(this) // даем разрешение функции работать с состояниями\r\n    this.deleteUser = this.deleteUser.bind(this)\r\n    this.editUser = this.editUser.bind(this)\r\n\r\n  }\r\n\r\n  render(){\r\n    return(<div>\r\n      <Header title =\"Список пользователей\" /> \r\n      <main>\r\n        <Users users={this.state.users} onEdit={this.editUser} onDelete={this.deleteUser} /*передача методов в компонентах (это нужно проделать во всех вложенных компонентах(в файле Users а затем User) )*//>\r\n      </main>\r\n      <aside>\r\n        <AddUser onAdd = {this.addUser}/>\r\n      </aside>\r\n    </div>)\r\n  }\r\n\r\n  deleteUser(id){ // перебирается весь массив и записываются все элементы кроме того, что указан в условии\r\n    this.setState({\r\n      users: this.state.users.filter((el) => el.id != id) \r\n    })\r\n  }\r\n\r\n  editUser(user){ // функция редактирования формы\r\n    let allUsers = this.state.users // получили ввсех пользователей\r\n    allUsers[user.id] = user  // нашли нужного и заменили на того, что аолуаем в качестве параметра\r\n\r\n    this.setState({users: []}, () => { // очищаем массив и сразу заполняем его новыми элементами\r\n      this.setState({users: [...allUsers]})\r\n    })\r\n  }\r\n\r\n  addUser(user) { // к текущему списку добавляется обьект, который состоит из id + параметры, которые передаются в функцию(даные от пользователя)\r\n    const id = this.state.users.length + 1\r\n    this.setState({users: [...this.state.users, {id, ...user}] })\r\n  }\r\n\r\n}\r\n\r\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}