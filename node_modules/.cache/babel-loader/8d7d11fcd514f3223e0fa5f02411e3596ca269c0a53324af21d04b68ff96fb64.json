{"ast":null,"code":"import React from\"react\";import Header from\"./components/header\";import Users from\"./components/users\";import AddUser from\"./components/addUser\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const baseUrl=\"https://reqres.in/api/users?page=2\";class App extends React.Component{constructor(props){//конструктор и обьявление состояний\nsuper(props);axios.get(baseUrl).then(res=>{//получение информации по url адресу, а затем выполнение кода указанного в then\nthis.setState({users:res.data.data});// если перейти по ссылке,то можно увидеть что все нужные данные записаны в data\n});this.state={users:[]};this.addUser=this.addUser.bind(this);// даем разрешение функции работать с состояниями\nthis.deleteUser=this.deleteUser.bind(this);this.editUser=this.editUser.bind(this);}render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{title:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(Users,{users:this.state.users,onEdit:this.editUser,onDelete:this.deleteUser/*передача методов в компонентах (это нужно проделать во всех вложенных компонентах(в файле Users а затем User) )*/})}),/*#__PURE__*/_jsx(\"aside\",{children:/*#__PURE__*/_jsx(AddUser,{onAdd:this.addUser})})]});}deleteUser(id){// перебирается весь массив и записываются все элементы кроме того, что указан в условии\nthis.setState({users:this.state.users.filter(el=>el.id!=id)});}editUser(user){// функция редактирования формы\nlet allUsers=this.state.users;// получили ввсех пользователей\nallUsers[user.id-1]=user;// нашли нужного и заменили на того, что аолуаем в качестве параметра\nthis.setState({users:[]},()=>{// очищаем массив и сразу заполняем его новыми элементами\nthis.setState({users:[...allUsers]});});}addUser(user){// к текущему списку добавляется обьект, который состоит из id + параметры, которые передаются в функцию(даные от пользователя)\nconst id=this.state.users.length+1;this.setState({users:[...this.state.users,{id,...user}]});}}export default App;","map":{"version":3,"names":["React","Header","Users","AddUser","axios","jsx","_jsx","jsxs","_jsxs","baseUrl","App","Component","constructor","props","get","then","res","setState","users","data","state","addUser","bind","deleteUser","editUser","render","children","title","onEdit","onDelete","onAdd","id","filter","el","user","allUsers","length"],"sources":["D:/Прога/react/my-app/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport Header from \"./components/header\"\r\nimport Users from \"./components/users\"\r\nimport AddUser from \"./components/addUser\"\r\nimport axios from \"axios\"\r\n\r\nconst baseUrl = \"https://reqres.in/api/users?page=2\"\r\n\r\nclass App extends React.Component {\r\n  constructor (props){ //конструктор и обьявление состояний\r\n    super(props)\r\n\r\n    axios.get(baseUrl).then((res) =>{ //получение информации по url адресу, а затем выполнение кода указанного в then\r\n      this.setState({users: res.data.data}) // если перейти по ссылке,то можно увидеть что все нужные данные записаны в data\r\n    }) \r\n\r\n\r\n    this.state = {\r\n      users: []\r\n    }\r\n    this.addUser = this.addUser.bind(this) // даем разрешение функции работать с состояниями\r\n    this.deleteUser = this.deleteUser.bind(this)\r\n    this.editUser = this.editUser.bind(this)\r\n\r\n  }\r\n\r\n  render(){\r\n    return(<div>\r\n      <Header title =\"Список пользователей\" /> \r\n      <main>\r\n        <Users users={this.state.users} onEdit={this.editUser} onDelete={this.deleteUser} /*передача методов в компонентах (это нужно проделать во всех вложенных компонентах(в файле Users а затем User) )*//>\r\n      </main>\r\n      <aside>\r\n        <AddUser onAdd = {this.addUser}/>\r\n      </aside>\r\n    </div>)\r\n  }\r\n\r\n  deleteUser(id){ // перебирается весь массив и записываются все элементы кроме того, что указан в условии\r\n    this.setState({\r\n      users: this.state.users.filter((el) => el.id != id) \r\n    })\r\n  }\r\n\r\n  editUser(user){ // функция редактирования формы\r\n    let allUsers = this.state.users // получили ввсех пользователей\r\n    allUsers[user.id - 1] = user  // нашли нужного и заменили на того, что аолуаем в качестве параметра\r\n\r\n    this.setState({users: []}, () => { // очищаем массив и сразу заполняем его новыми элементами\r\n      this.setState({users: [...allUsers]})\r\n    })\r\n  }\r\n\r\n  addUser(user) { // к текущему списку добавляется обьект, который состоит из id + параметры, которые передаются в функцию(даные от пользователя)\r\n    const id = this.state.users.length + 1\r\n    this.setState({users: [...this.state.users, {id, ...user}] })\r\n  }\r\n\r\n}\r\n\r\nexport default App"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,KAAK,KAAM,OAAO,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,OAAO,CAAG,oCAAoC,CAEpD,KAAM,CAAAC,GAAG,QAAS,CAAAV,KAAK,CAACW,SAAU,CAChCC,WAAWA,CAAEC,KAAK,CAAC,CAAE;AACnB,KAAK,CAACA,KAAK,CAAC,CAEZT,KAAK,CAACU,GAAG,CAACL,OAAO,CAAC,CAACM,IAAI,CAAEC,GAAG,EAAI,CAAE;AAChC,IAAI,CAACC,QAAQ,CAAC,CAACC,KAAK,CAAEF,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAGF,IAAI,CAACC,KAAK,CAAG,CACXF,KAAK,CAAE,EACT,CAAC,CACD,IAAI,CAACG,OAAO,CAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,IAAI,CAACC,UAAU,CAAG,IAAI,CAACA,UAAU,CAACD,IAAI,CAAC,IAAI,CAAC,CAC5C,IAAI,CAACE,QAAQ,CAAG,IAAI,CAACA,QAAQ,CAACF,IAAI,CAAC,IAAI,CAAC,CAE1C,CAEAG,MAAMA,CAAA,CAAE,CACN,mBAAOjB,KAAA,QAAAkB,QAAA,eACLpB,IAAA,CAACL,MAAM,EAAC0B,KAAK,CAAE,qHAAsB,CAAE,CAAC,cACxCrB,IAAA,SAAAoB,QAAA,cACEpB,IAAA,CAACJ,KAAK,EAACgB,KAAK,CAAE,IAAI,CAACE,KAAK,CAACF,KAAM,CAACU,MAAM,CAAE,IAAI,CAACJ,QAAS,CAACK,QAAQ,CAAE,IAAI,CAACN,UAAY,oHAAoH,CAAC,CACnM,CAAC,cACPjB,IAAA,UAAAoB,QAAA,cACEpB,IAAA,CAACH,OAAO,EAAC2B,KAAK,CAAI,IAAI,CAACT,OAAQ,CAAC,CAAC,CAC5B,CAAC,EACL,CAAC,CACR,CAEAE,UAAUA,CAACQ,EAAE,CAAC,CAAE;AACd,IAAI,CAACd,QAAQ,CAAC,CACZC,KAAK,CAAE,IAAI,CAACE,KAAK,CAACF,KAAK,CAACc,MAAM,CAAEC,EAAE,EAAKA,EAAE,CAACF,EAAE,EAAIA,EAAE,CACpD,CAAC,CAAC,CACJ,CAEAP,QAAQA,CAACU,IAAI,CAAC,CAAE;AACd,GAAI,CAAAC,QAAQ,CAAG,IAAI,CAACf,KAAK,CAACF,KAAK,CAAC;AAChCiB,QAAQ,CAACD,IAAI,CAACH,EAAE,CAAG,CAAC,CAAC,CAAGG,IAAI,CAAE;AAE9B,IAAI,CAACjB,QAAQ,CAAC,CAACC,KAAK,CAAE,EAAE,CAAC,CAAE,IAAM,CAAE;AACjC,IAAI,CAACD,QAAQ,CAAC,CAACC,KAAK,CAAE,CAAC,GAAGiB,QAAQ,CAAC,CAAC,CAAC,CACvC,CAAC,CAAC,CACJ,CAEAd,OAAOA,CAACa,IAAI,CAAE,CAAE;AACd,KAAM,CAAAH,EAAE,CAAG,IAAI,CAACX,KAAK,CAACF,KAAK,CAACkB,MAAM,CAAG,CAAC,CACtC,IAAI,CAACnB,QAAQ,CAAC,CAACC,KAAK,CAAE,CAAC,GAAG,IAAI,CAACE,KAAK,CAACF,KAAK,CAAE,CAACa,EAAE,CAAE,GAAGG,IAAI,CAAC,CAAE,CAAC,CAAC,CAC/D,CAEF,CAEA,cAAe,CAAAxB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}